pipeline {
    agent any

    environment {
        JENKINS_HOME="$JENKINS_HOME"
        BUILD="/var/jenkins_home/workspace/mlops"
    }

    stages {
        stage('Preparation') {
            steps {
                sh 'chown -R jenkins:jenkins "$BUILD"'
                deleteDir()
            }
        }

        stage('Checkout') {
            steps {
                git 'https://github.com/nocsland/other-projects.git'
                sh 'ls -al "$BUILD/translator"'
            }
        }

        stage('Docker clean'){
            steps {
                sh 'for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done'
            }

        stage('Install Docker') {
            steps {
                sh 'apt-get update && apt-get install -y --no-install-recommends \
                    apt-transport-https \
                    ca-certificates \
                    curl \
                    gnupg \
                    lsb-release \
                    && curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --batch --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg \
                    && echo \
                    "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian \
                    $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null \
                    && apt-get update && apt-get install -y --no-install-recommends docker-ce docker-ce-cli containerd.io \
                    && rm -rf /var/lib/apt/lists/*'
            }
        }

        stage('Build Docker image') {
            steps {
                script {
                    dir('$BUILD/translator/') {
                        sh 'docker build -t translator-container .'
                    }
                }
            }
        }
    }
}
