pipeline {
    agent any
    options {
        // This is required if you want to clean before build
        skipDefaultCheckout(true)
    }

    environment {
        JENKINS_HOME="$JENKINS_HOME"
        BUILD="/var/jenkins_home/workspace/mlops"
    }

    stages {
        stage('Preparation') {
            steps {
            cleanWs()
            checkout scm
            }
        }

        stage('Checkout') {
            steps {
                git 'https://github.com/nocsland/other-projects.git'
                sh 'ls -al "$BUILD/translator"'
            }
        }

        stage('Remove old Docker'){
            steps{
                sh 'for pkg in docker.io docker-doc docker-compose podman-docker containerd runc; do apt-get remove $pkg||true; done'
            }
        }
        stage('Add Docker's official GPG key') {
                steps {
                    sh 'rm /usr/share/keyrings/docker-archive-keyring.gpg'
                    sh '''
                       # Add Docker official GPG key:
                        apt-get update
                        apt-get install ca-certificates curl
                        install -m 0755 -d /etc/apt/keyrings
                        curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
                        chmod a+r /etc/apt/keyrings/docker.asc

                        # Add the repository to Apt sources:
                        echo \
                          "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
                          $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
                          tee /etc/apt/sources.list.d/docker.list > /dev/null
                        apt-get update
                    '''
    }
}
        stage('Install Docker'){
                steps {
                        sh 'apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin'
                }
        }



        stage('Build Docker image') {
            steps {
                script {
                    dir('translator/') {
                        sh 'docker build -t translator-container .'
                    }
                }
            }
        }
    }
}
